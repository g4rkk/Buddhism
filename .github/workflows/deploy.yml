name: CI/CD Pipeline

# 定义何时触发工作流，通常是在 push 或 pull request
on:
  push:
    branches:
      - main # 当推送到主分支时触发
  pull_request:
    branches:
      - main # 当有 pull request 时触发

jobs:
  # 定义 CI 工作流，包括测试
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.7' # 替换为你项目中使用的 Ruby 版本

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Run tests
        run: bundle exec rspec # 假设你使用 RSpec 进行测试，根据你项目使用的测试框架修改

  # 定义 CD 工作流，部署到 Render
  deploy:
    runs-on: ubuntu-latest
    needs: test # 在测试通过后执行

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}  # 确保这是你的环境变量
        run: |
          curl -X POST \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": true}' \
          https://api.render.com/v1/services/srv-cs6ntua3esus73b66br0/deploys

      # 新增步骤：运行数据库迁移
      - name: Run database migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}  # Render 上的数据库连接
        run: |
          bundle exec rails db:migrate
