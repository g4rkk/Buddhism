name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 测试工作流
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_database
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/test_database

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.7'

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Prepare database
        run: |
          bin/rails db:create
          bin/rails db:schema:load

      - name: Run tests
        run: bundle exec rspec

  # 部署工作流
  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.7'

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

  # 数据库迁移和表结构导入工作流
  migrate_schema:
    runs-on: ubuntu-latest
    needs: deploy

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_database
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      # 使用 GitHub Actions 服务中的数据库导出表结构
      - name: Export schema from Docker database
        run: pg_dump -U postgres -s myapp_development > backup.sql

      # 将表结构导入到 Render 云数据库
      - name: Migrate schema to Render database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          PGPASSWORD="${{ secrets.RENDER_DB_PASSWORD }}" psql -U saoirseclerks -h dpg-cs6vnhd6l47c738u68ig-a.singapore-postgres.render.com -d buddhismrenderdb < backup.sql

      # 运行数据库迁移
      - name: Run database migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: bundle exec rails db:migrate
